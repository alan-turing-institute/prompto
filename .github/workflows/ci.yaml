name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - develop
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3

jobs:
    pre-commit:
        name: Lint with pre-commit
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v4
              with:
                python-version: 3.11
            - uses: pre-commit/action@v3.0.0

    checks:
        name: Check Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
        runs-on: ${{ matrix.runs-on }}
        needs: [pre-commit]
        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.11", "3.12"]
                runs-on: [ubuntu-latest, macos-latest]

        steps:
            - uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - uses: actions/setup-python@v5
              with:
                python-version: ${{ matrix.python-version }}

            - name: Install package
              run: python -m pip install .[all]

            - name: Test package
              run: python -m pytest -ra

    # dist:
    #     name: Distribution build
    #     runs-on: ubuntu-latest
    #     needs: [pre-commit]

    #     steps:
    #         - uses: actions/checkout@v4
    #           with:
    #             fetch-depth: 0

    #         - name: Build sdist and wheel
    #           run: pipx run build

    #         - uses: actions/upload-artifact@v4
    #           with:
    #             path: dist

    #         - name: Check products
    #           run: pipx run twine check dist/*

    #         - uses: pypa/gh-action-pypi-publish@v1.8.14
    #           if: github.event_name == 'release' && github.event.action == 'published'
    #           with:
    #             # Remember to generate this and set it in "GitHub Secrets"
    #             user: __token__
    #             password: ${{ secrets.PYPI_API_TOKEN }}
