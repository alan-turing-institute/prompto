[tool.poetry]
name = "prompto"
version = "0.2.1"
description = "Library for asynchronous querying of LLM API endpoints and logging progress"
authors = [
    "rchan <rchan@turing.ac.uk>",
    "fedenanni <nanni.federico@gmail.com>",
    "evelinag <evelina@evelinag.com>",
    "edchapman88 <echapman@turing.ac.uk>",
    "edwinb12 <w.edwin.brown@outlook.com>"
]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11,<4.0"

# Sorted primary dependencies
accelerate = { version = "^1.3.0", optional = true } # working with 1.6.0
aiohttp = { version = "^3.11.18", optional = false }
anthropic = { version = "^0.45.2", optional = true }
black = { version = "^24.3.0", optional = true } # working with 24.10.0
cli-test-helpers = { version = "^4.0.0", optional = true } # working with 4.1.0
google-cloud-aiplatform = { version = "^1.71.1", optional = true }
google-genai = { version = "^1.11.0", optional = true } # working with 1.13.0
google-generativeai = { version = "^0.8.4", optional = false }
huggingface-hub = { version = "^0.28.0", optional = true } # working with 0.28.1
ipykernel = { version = "^6.29.4", optional = true } # working with 6.29.5
isort = { version = "^5.13.2", optional = true }
mkdocs-gen-files = { version = "^0.5.0", optional = true }
mkdocs-jupyter = { version = "^0.24.7", optional = true } # working with 0.24.8
mkdocs-literate-nav = { version = "^0.6.1", optional = true } # working with 0.6.2
mkdocs-material = { version = "^9.6.12", optional = false }
mkdocs-same-dir = { version = "^0.1.3", optional = true }
mkdocs-section-index = { version = "^0.3.10", optional = false }
mkdocstrings-python = { version = "^1.10.3", optional = true } # working with 1.16.10
ollama = { version = "^0.4.8", optional = false }
openai = { version = "^1.77.0", optional = false }
pandas = "^2.2.3"
pillow = { version = "^11.2.1", optional = false }
pre-commit = { version = "^3.7.0", optional = true } # working with 3.8.0
pytest = { version = "^8.1.1", optional = true } # working with 8.3.5
pytest-asyncio = { version = "^0.23.6", optional = true } # working with 0.23.8
pytest-cov = { version = "^5.0.0", optional = true }
python-dotenv = "^1.0.1" # working with 1.1.0
quart = { version = "^0.20.0", optional = true }
torch = { version = "^2.7.0", optional = false }
tqdm = "^4.67.1"  # working with 4.67.1
transformers = { version = "^4.50.3", optional = true } # working with 4.50.3
urllib3 = { version = "^2.4.0", optional = false }
vertexai = { version ="^1.71.1", optional = true }

# Sorted secondary dependencies
# These are not directly used in the code, but are required by the primary dependencies
# They are specified here, because the automatic dependency resolution of pip
# can be slow and sometimes times-out without resolving them all.
beautifulsoup4 = { version = "^4.13.4", optional = false } # Secondary
certifi = { version = "^2025.4.26", optional = false } # Secondary
charset-normalizer = { version = "^3.4.2", optional = false } # Secondary
debugpy = { version = "^1.8.14", optional = false } # Secondary
frozenlist = { version = "^1.6.0", optional = false } # Secondary
google-api-core = { version = "^2.25.0rc0", optional = false } # Secondary
google-api-python-client = { version = "^2.166.0", optional = false } # Secondary
google-auth = { version = "^2.40.0", optional = false } # Secondary
google-auth-httplib2 = { version = "^0.2.0", optional = false } # Secondary
googleapis-common-protos = { version = "^1.70.0", optional = false } # Secondary
griffe = { version = "^1.7.3", optional = false } # Secondary
h11 = { version = "^0.16.0", optional = false } # Secondary
httpcore = { version = "^1.0.9", optional = false } # Secondary
httplib2 = { version = "^0.22.0", optional = false } # Secondary
identify = { version = "^2.6.10", optional = false } # Secondary
ipython = { version = "^9.2.0", optional = false } # Secondary
jsonschema-specifications = { version = "^2025.4.1", optional = false } # Secondary
jupytext = { version = "^1.17.1", optional = false } # Secondary
Markdown = { version = "^3.8", optional = false } # Secondary
multidict = { version = "^6.4.3", optional = false } # Secondary
mypy_extensions = { version = "^1.1.0", optional = false } # Secondary
numpy = { version = "^2.2.5", optional = false } # Secondary
packaging = { version = "^25.0", optional = false } # Secondary
pydantic = { version = "^2.11.4", optional = false } # Secondary
pydantic_core = { version = "^2.33.2", optional = false } # Secondary
pymdown-extensions = { version = "^10.15", optional = false } # Secondary
pyparsing = { version = "^3.2.3", optional = false } # Secondary
pytest-random-order = { version = "^1.1.1", optional = false } # Secondary
pyzmq = { version = "^26.4.0", optional = false } # Secondary
rsa = { version = "^4.9.1", optional = false } # Secondary
ruff = { version = "^0.11.6", optional = false } # Secondary
setuptools = { version = "^80.3.1", optional = false } # Secondary
shapely = { version = "^2.1.0", optional = false } # Secondary
snakeviz = { version = "^2.2.2", optional = false } # Secondary
soupsieve = { version = "^2.7", optional = false } # Secondary
sympy = { version = "^1.14.0", optional = false } # Secondary
typing_extensions = { version = "^4.13.2", optional = false } # Secondary
virtualenv = { version = "^20.31.1", optional = false } # Secondary
websockets = { version = "^15.0.1", optional = false } # Secondary
yarl = { version = "^1.20.0", optional = false } # Secondary


[tool.poetry.extras]
all = [
    "black",
    "isort",
    "pre-commit",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "ipython",
    "ipykernel",
    "mkdocs-material",
    "mkdocstrings-python",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-section-index",
    "mkdocs-same-dir",
    "mkdocs-jupyter",
    "cli-test-helpers",
    "vertexai",
    "google-cloud-aiplatform",
    # "google-generativeai",
    "google-genai",
    "openai",
    "pillow",
    "ollama",
    "huggingface-hub",
    "quart",
    "transformers",
    "torch",
    "accelerate",
    "aiohttp",
    "anthropic"
]
dev = [
    "black",
    "isort",
    "pre-commit",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "ipython",
    "ipykernel",
    "mkdocs-material",
    "mkdocstrings-python",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-section-index",
    "mkdocs-same-dir",
    "mkdocs-jupyter",
    "cli-test-helpers",
]
gemini = [
    "vertexai",
    "google-cloud-aiplatform",
    # "google-generativeai", # TODO: deprecated - to be removed
    "google-genai",
    "pillow"
]
vertexai = [
    "vertexai",
    "google-cloud-aiplatform",
    #Â "google-generativeai", # TODO: deprecated - to be removed
    "google-genai",
    "pillow"
]
azure_openai = ["openai", "pillow"]
openai = ["openai", "pillow"]
ollama = ["ollama"]
huggingface_tgi = ["openai", "huggingface-hub"]
quart = ["quart", "transformers", "torch", "accelerate", "aiohttp"]
anthropic = ['anthropic']

[tool.pytest.ini_options]
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
prompto_run_pipeline = "prompto.scripts.run_pipeline:main"
prompto_run_experiment = "prompto.scripts.run_experiment:cli"
prompto_check_experiment = "prompto.scripts.check_experiment:main"
prompto_create_judge_file = "prompto.scripts.create_judge_file:main"
prompto_obtain_missing_jsonl = "prompto.scripts.obtain_missing_id_jsonl:main"
prompto_convert_images = "prompto.scripts.convert_images:main"
prompto_quart_server = "prompto.apis.quart.quart_api:main"
prompto_upload_media = "prompto.upload_media:main"
