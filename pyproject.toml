[tool.poetry]
name = "prompto"
version = "0.1.0"
description = "Library for facilitating processing of experiments stored as jsonl files by automating querying LLM APIs and logging progress"
authors = [
    "rchan <rchan@turing.ac.uk>",
    "fedenanni <nanni.federico@gmail.com>",
    "evelinag <evelina@evelinag.com>",
    "edchapman88 <echapman@turing.ac.uk>"
]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
tqdm = "^4.66.4"
python-dotenv = "^1.0.1"
black = { version = "^24.3.0", optional = true }
isort = { version = "^5.13.2", optional = true }
pre-commit = { version = "^3.7.0", optional = true }
ipykernel = { version = "^6.29.4", optional = true }
pytest = { version = "^8.1.1", optional = true }
pytest-asyncio = { version = "^0.23.6", optional = true }
vertexai = { version = "^1.49.0", optional = true }
google-cloud-aiplatform = { version = "^1.49.0", optional = true }
google-generativeai = { version = "^0.7.0", optional = true }
openai = { version = "^1.35.3", optional = true }
pillow = { version = "^10.3.0", optional = true }
ollama = { version = "^0.2.1", optional = true }
huggingface-hub = { version = "^0.23.4", optional = true }
quart = { version = "^0.19.6", optional = true }
transformers = { version = "^4.41.2", optional = true }
torch = { version = "^2.3.1", optional = true }
accelerate = { version = "^0.31.0", optional = true }
aiohttp = { version = "^3.9.5", optional = true }

[tool.poetry.extras]
all = [
    "black",
    "isort",
    "pre-commit",
    "ipykernel",
    "pytest",
    "pytest-asyncio",
    "vertexai",
    "google-cloud-aiplatform",
    "google-generativeai",
    "openai",
    "pillow",
    "ollama",
    "huggingface-hub",
    "quart",
    "transformers",
    "torch",
    "accelerate",
    "aiohttp",
]
dev = [
    "black",
    "isort",
    "pre-commit",
    "ipykernel",
    "pytest",
    "pytest-asyncio",
]
gemini = ["vertexai", "google-cloud-aiplatform", "google-generativeai", "pillow"]
vertexai = ["vertexai", "google-cloud-aiplatform", "google-generativeai", "pillow"]
azure_openai = ["openai", "pillow"]
openai = ["openai", "pillow"]
ollama = ["ollama"]
huggingface_tgi = ["openai", "huggingface-hub"]
quart = ["quart", "transformers", "torch", "accelerate", "aiohttp"]

[tool.pytest.ini_options]
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
prompto_run_pipeline = "prompto.scripts.run_pipeline:main"
prompto_run_experiment = "prompto.scripts.run_experiment:cli"
prompto_check_experiment = "prompto.scripts.check_experiment:main"
prompto_create_judge_file = "prompto.scripts.create_judge_file:main"
prompto_obtain_missing_jsonl = "prompto.scripts.obtain_missing_id_jsonl:main"
prompto_convert_images = "prompto.scripts.convert_images:main"
prompto_quart_server = "prompto.apis.quart.quart_api:main"
